"""first revision

Revision ID: 41c126e8e972
Revises: 
Create Date: 2024-11-13 15:27:39.647557

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '41c126e8e972'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classrooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('fungible', sa.Boolean(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('cohorts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('number_of_students', sa.Integer(), nullable=False),
    sa.Column('lunch_position', sa.Integer(), nullable=False),
    sa.Column('theoretical_week_parity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('abbr_name', sa.String(length=20), nullable=False),
    sa.Column('rg', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('rg')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('disciplines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_abbr', sa.String(length=20), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('workload', sa.Integer(), nullable=False),
    sa.Column('is_theoretical', sa.Boolean(), nullable=False),
    sa.Column('is_intensive', sa.Boolean(), nullable=False),
    sa.Column('mandatory_room_id', sa.Integer(), nullable=True),
    sa.Column('joined_cohorts', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['mandatory_room_id'], ['classrooms.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('cohorts_disciplines',
    sa.Column('cohort_id', sa.Integer(), nullable=True),
    sa.Column('discipline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cohort_id'], ['cohorts.id'], ),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], )
    )
    op.create_table('discipline_prerequisites',
    sa.Column('discipline_code', sa.String(length=20), nullable=False),
    sa.Column('prerequisite_code', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['discipline_code'], ['disciplines.code'], ),
    sa.ForeignKeyConstraint(['prerequisite_code'], ['disciplines.code'], ),
    sa.PrimaryKeyConstraint('discipline_code', 'prerequisite_code')
    )
    op.create_table('moduli',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discipline_id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.Column('main_classroom_id', sa.Integer(), nullable=True),
    sa.Column('joined_cohorts', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cohort_id'], ['cohorts.id'], ),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ),
    sa.ForeignKeyConstraint(['main_classroom_id'], ['classrooms.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('discipline_id', 'cohort_id', name='_discipline_cohort_uc')
    )
    op.create_table('teacher_discipline_association',
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('discipline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], )
    )
    op.create_table('lectures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('grid_position', sa.Integer(), nullable=False),
    sa.Column('modulus_id', sa.Integer(), nullable=False),
    sa.Column('classroom_id', sa.Integer(), nullable=True),
    sa.Column('joined_cohorts', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['classroom_id'], ['classrooms.id'], ),
    sa.ForeignKeyConstraint(['modulus_id'], ['moduli.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'grid_position', 'modulus_id')
    )
    op.create_table('teacher_modulus_association',
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('modulus_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modulus_id'], ['moduli.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher_modulus_association')
    op.drop_table('lectures')
    op.drop_table('teacher_discipline_association')
    op.drop_table('moduli')
    op.drop_table('discipline_prerequisites')
    op.drop_table('cohorts_disciplines')
    op.drop_table('disciplines')
    op.drop_table('users')
    op.drop_table('teachers')
    op.drop_table('cohorts')
    op.drop_table('classrooms')
    # ### end Alembic commands ###
